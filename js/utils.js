// js/utils.js
// ==============================
// üîß Utility Functions
// ==============================

// üì¶ ‡∏î‡∏∂‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡∏¢‡∏≤ (mg) ‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
export function getAvailablePills(pillCheckboxes) {
  const selected = [];
  pillCheckboxes.forEach(cb => {
    if (cb.checked) selected.push(parseInt(cb.value));
  });
  return selected.sort((a, b) => b - a);
}

// üìÖ ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô JS (0=Sunday) ‚Üí index ‡πÅ‡∏ö‡∏ö‡πÑ‡∏ó‡∏¢ (0=‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå ... 6=‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå)
export function getThaiDayIndex(jsDayIndex) {
  return (jsDayIndex === 0) ? 6 : jsDayIndex - 1;
}

// üóìÔ∏è ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ß‡∏±‡∏ô (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ï‡∏≤‡∏£‡∏≤‡∏á)
export function makeDisplayOrder(mode) {
  // 'mon-sun' => [0..6], 'sun-sat' => [6,0..5]
  return mode === 'mon-sun' ? [0, 1, 2, 3, 4, 5, 6] : [6, 0, 1, 2, 3, 4, 5];
}

// üïí ‡∏•‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ã‡πâ‡∏≥‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏£‡πá‡∏ß
export function debounce(func, delay = 300) {
  let timeoutId;
  return function (...args) {
    clearTimeout(timeoutId);
    timeoutId = setTimeout(() => func.apply(this, args), delay);
  };
}

// ==============================
// üåô Theme Utilities (Dark Mode)
// ==============================

/**
 * ‡∏™‡∏•‡∏±‡∏ö‡∏ò‡∏µ‡∏°‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á light / dark
 * @param {HTMLElement} root - document.documentElement
 * @param {boolean} forceDark - true ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö dark mode
 */
export function toggleTheme(root = document.documentElement, forceDark = null) {
  const isDark = root.classList.contains('dark');
  const nextMode = forceDark !== null ? forceDark : !isDark;
  root.classList.toggle('dark', nextMode);
  localStorage.setItem('theme', nextMode ? 'dark' : 'light');
}

/**
 * ‡πÇ‡∏´‡∏•‡∏î‡∏ò‡∏µ‡∏°‡∏à‡∏≤‡∏Å LocalStorage ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏≠‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö
 */
export function loadTheme(root = document.documentElement) {
  const savedTheme = localStorage.getItem('theme');
  if (savedTheme === 'dark') root.classList.add('dark');
  else root.classList.remove('dark');
}

// ==============================
// üìÅ ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô localStorage ‡πÅ‡∏ö‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
// ==============================
export function saveToStorage(key, value) {
  try {
    localStorage.setItem(key, JSON.stringify(value));
  } catch (e) {
    console.warn('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ:', e);
  }
}

export function loadFromStorage(key, defaultValue = null) {
  try {
    const value = localStorage.getItem(key);
    return value ? JSON.parse(value) : defaultValue;
  } catch (e) {
    console.warn('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ:', e);
    return defaultValue;
  }
}
